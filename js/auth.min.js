var Auth={token:"",noConnectionErrors:0,login:function(e,c){var b;var a=Settings.get("email");if(a){App.options.email=a}else{App.options.email=null;c=true}var d=Auth.token;GO2.init(App.options);GO2.login(false,(c===false));if(c===false){b=setTimeout(function(){clearTimeout(b);if(d===Auth.token){GO2.logout();GO2.login(false,false);App.stopAutoFetch()}},5000)}GO2.onlogin=function(f){Auth.validateToken(f,function(g){if(g){$.ajax({url:"https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token="+f,type:"GET",dataType:"json",timeout:10000}).done(function(h){Auth.token=f;localStorage.setItem("accessToken",f);if(App.options.email&&App.options.email!=h.email){List.storage.clear(function(){alert("You have signed in as different user");App.runSetup()});return}Settings.set("email",h.email);e&&e(f)})}})};GO2.oncancel=function(){alert("Fire Tasks requires Google Authentication for proper work. We will add offline mode later.")}},getAccessToken:function(c,b){b=b||false;if(b==true){localStorage.removeItem("accessToken");GO2.logout();this.login(c,b);return}else{var a=localStorage.getItem("accessToken")}if(!a){this.login(c,b);return}Auth.token=a;c&&c(a)},makeRequest:function(b,c,a){if(App.unrecoverableErrorOccurred()){console.error("Auth has caught unrecoverable error and will not proceed.");return}Auth.getAccessToken(function(h){var d=(typeof b.fields==="undefined")?"":"&fields="+b.fields;var e=(typeof b.query_params!=="undefined")?"?"+b.query_params+"&":"?";var f=b.url+e+"access_token="+Auth.token+d;var i=b.type;var g=JSON.stringify(b.pack)||{};$.ajax({url:f,data:g,timeout:10000,type:i,contentType:"application/json; charset=UTF-8",dataType:"json"}).done(function(k,l,j){Auth.noConnectionErrors=0;c(true,k,l,j)}).fail(function(j,l,k){if(j.status==0){if(Auth.noConnectionErrors>1){Task.view.toggleProgress(false);setTimeout(function(){App.setAutoFetch();Auth.noConnectionErrors--;Task.view.toggleProgress(true);Auth.makeRequest(b,c,a)},10000);return}List.view.toggleProgress(false);Task.view.toggleProgress(false);utils.status.show("No connection. Retrying...",1500);Logger.warn("No connection. Retrying...");App.stopAutoFetch();setTimeout(function(){App.setAutoFetch();Auth.noConnectionErrors++;Task.view.toggleProgress(true);Auth.makeRequest(b,c,a)},1000);return}else{if(j.status==401){localStorage.removeItem("accessToken");App.stopAutoFetch();GO2.logout();Auth.getAccessToken(function(){App.setAutoFetch();Auth.makeRequest(b,c,a)});return}else{if(j.status==404){App.onResourceNotFound(b.entity);c(true,null,l,k,b.entity);return}else{if(j.status==403){if(j.responseJSON&&j.responseJSON.error&&j.responseJSON.error.message&&j.responseJSON.error.message=="Daily Limit Exceeded"){utils.status.show("API Daily Limit Exceeded :(",6000);List.view.toggleProgress(false);Task.view.toggleProgress(false);console.error(j.responseJSON.error);return}Auth.makeRequest(b,c,a);return}else{utils.status.show("An error occurred: "+j.status+" - "+j.responseJSON.error.errors[0].message,1000)}}}}if(typeof a!=="undefined"){a(false,j,l,k)}else{c(false,j,l,k)}})})},validateToken:function(a,b){$.ajax({url:"https://www.googleapis.com/oauth2/v1/tokeninfo",data:{access_token:a},timeout:10000,type:"GET",dataType:"json"}).done(function(c){if(c.audience==App.options.client_id){b(true)}}).fail(function(c,f,e){var d=c.responseJSON||{};if(typeof d.error!=="undefined"&&d.error=="invalid_token"){utils.status.show("Invalid token")}utils.status.show("An error has occurred while validating the token");b(false)})},revokeToken:function(){this.getAccessToken(function(a){$.ajax({url:"https://accounts.google.com/o/oauth2/revoke?token="+a,type:"GET",dataType:"jsonp",timeout:10000,statusCode:{200:function(){alert("Your were successfully logged out");List.storage.clear(function(){localStorage.removeItem("accessToken");localStorage.removeItem("lastListId");Settings.remove("email");delete Auth.token;GO2.logout();Settings.hideLayout(false);App.runSetup()})},400:function(){utils.status.show("Something went wrong :(",4000);Auth.revokeToken()}}})})}};
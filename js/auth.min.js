var Auth={token:"",noConnectionErrors:0,init:function(){$.ajaxSetup({xhr:function(){return new window.XMLHttpRequest({mozSystem:true,cache:false})}})},dataCalculation:{started:false,value:0,start:function(){Auth.dataCalculation.value=0;Auth.dataCalculation.started=true},getValue:function(a){if(typeof a==="undefined"){a=true}var b=Auth.dataCalculation.value;if(a){Auth.dataCalculation.value=0}Auth.dataCalculation.started=false;return b}},login:function(e,c){var b;var a=Settings.get("email");if(a){FT.options.email=a}else{FT.options.email=null;c=true}var d=Auth.token;GO2.init(FT.options);GO2.login(false,(c===false));if(c===false){b=setTimeout(function(){clearTimeout(b);if(d===Auth.token){GO2.logout();GO2.login(false,false);FT.stopAutoFetch()}},5000)}GO2.onlogin=function(f){Auth.validateToken(f,function(g){if(g){$.ajax({url:"https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token="+f,type:"GET",dataType:"json",timeout:10000}).done(function(h){Auth.token=f;localStorage.setItem("accessToken",f);if(FT.options.email&&FT.options.email!=h.email){List.storage.clear(function(){alert("You have signed in as different user");FT.runSetup()});return}Settings.set("email",h.email);e&&e(f)}).fail(function(h,j,i){utils.status.show("Something went wrong :(\nRetrying...",2000);GO2.logout();Auth.login(e,true)})}})};GO2.oncancel=function(){alert("Fire Tasks requires Google Authentication for proper work. We will add offline mode later.")}},getAccessToken:function(c,b){b=b||false;if(b==true){localStorage.removeItem("accessToken");GO2.logout();this.login(c,b);return}else{var a=localStorage.getItem("accessToken")}if(!a){this.login(c,b);return}Auth.token=a;c&&c(a)},makeRequest:function(b,c,a){if(FT.unrecoverableErrorOccurred()){console.error("Auth has caught unrecoverable error and will not proceed.");return}Auth.getAccessToken(function(h){var d=(typeof b.fields==="undefined")?"":"&fields="+b.fields;var e=(typeof b.query_params!=="undefined")?"?"+b.query_params+"&":"?";var f=b.url+e+"access_token="+Auth.token+d;var i=b.type;var g=JSON.stringify(b.pack)||{};$.ajax({url:f,data:g,timeout:10000,type:i,contentType:"application/json; charset=UTF-8",dataType:"json"}).done(function(j,l,k){if(j&&j.deleted){FT.onResourceNotFound(b.entity)}Auth.noConnectionErrors=0;c(true,j,l,k)}).fail(function(k,m,l){if(k.status==0){function j(){FT.startSyncQueue();FT.setAutoFetch();Task.view.toggleProgress(true);Auth.makeRequest(b,c,a)}List.view.toggleProgress(false);Task.view.toggleProgress(false);FT.stopAutoFetch();Sync.clearStarted();if(FT.isOnline()){if(Auth.noConnectionErrors>1){setTimeout(function(){Auth.noConnectionErrors--;j()},10000);return}utils.status.show("No connection. Retrying...",1500);Logger.warn("No connection. Retrying...");setTimeout(function(){Auth.noConnectionErrors++;j()},1000)}else{EV.listen("connection-online",function(){j()})}return}else{if(k.status==401){localStorage.removeItem("accessToken");FT.stopAutoFetch();GO2.logout();Auth.getAccessToken(function(){FT.setAutoFetch();Auth.makeRequest(b,c,a)});return}else{if(k.status==404){FT.onResourceNotFound(b.entity);c(true,null,m,l,b.entity);return}else{if(k.status==403){if(k.responseJSON&&k.responseJSON.error&&k.responseJSON.error.message&&k.responseJSON.error.message=="Daily Limit Exceeded"){utils.status.show("API Daily Limit Exceeded :(",6000);List.view.toggleProgress(false);Task.view.toggleProgress(false);console.error(k.responseJSON.error);return}Auth.makeRequest(b,c,a);return}else{utils.status.show("An error occurred: "+k.status+" - "+k.responseJSON.error.errors[0].message,1000)}}}}if(typeof a!=="undefined"){a(false,k,m,l)}else{c(false,k,m,l)}}).always(function(){var j=(arguments[0]&&arguments[0].getResponseHeader)?arguments[0]:arguments[2];if(Auth.dataCalculation.started){Auth.dataCalculation.value+=parseInt(j.getResponseHeader("Content-Length")||0)}})})},validateToken:function(a,b){$.ajax({url:"https://www.googleapis.com/oauth2/v1/tokeninfo",data:{access_token:a},timeout:10000,type:"GET",dataType:"json"}).done(function(c){if(c.audience==FT.options.client_id){b(true)}}).fail(function(c,f,e){var d=c.responseJSON||{};if(typeof d.error!=="undefined"&&d.error=="invalid_token"){utils.status.show("Invalid token")}utils.status.show("An error has occurred while validating the token");b(false)})},revokeToken:function(){this.getAccessToken(function(a){$.ajax({url:"https://accounts.google.com/o/oauth2/revoke?token="+a,type:"GET",dataType:"jsonp",timeout:10000,statusCode:{200:function(){alert("Your were successfully logged out");List.storage.clear(function(){localStorage.removeItem("accessToken");localStorage.removeItem("lastListId");Settings.remove("email");delete Auth.token;GO2.logout();Settings.hideLayout(false);FT.runSetup()})},400:function(){utils.status.show("Something went wrong :(",4000);Auth.revokeToken()}}})})}};